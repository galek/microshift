apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-deployment
  labels:
    app: pg
spec:
  selector:
    matchLabels:
      app: pg
  replicas: 1
  template:
    metadata:
      labels:
        app: pg
    spec:
      containers:
      - name: pg-deployment
        image: arm64v8/postgres:9-bullseye
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5432
        envFrom:
          - configMapRef:
              name: postgres-config
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: pg-data
            subPath: data
        #securityContext:
        #  privileged: true
        resources:
          requests:
            memory: 128M
            cpu: 125m
          limits:
            memory: 1024M
            cpu: 1000m
      securityContext:
        fsGroup: 1001
      volumes:
      - name: pg-data
        persistentVolumeClaim:
          claimName: hostpath-provisioner-claim
      initContainers:
      - name: volume-permissions
        image: busybox
        command: ['sh', '-c', 'chgrp -R 1001 /var/lib/postgresql/data;chmod -R g+rwx /var/lib/postgresql/data']
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pg-data
          subPath: data
---
apiVersion: v1
kind: Service
metadata:
 name: pg-svc
 labels:
   app: pg
spec:
 type: NodePort
 ports:
 - port: 5432
   nodePort: 30080
 selector:
   app: pg

