apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
    spec:
      securityContext:
        fsGroup: 1001
      volumes:
      - name: nginx-data
        persistentVolumeClaim:
          claimName: hostpath-provisioner-claim
      initContainers:
      - name: volume-permissions
        image: busybox
        #securityContext:
        #  privileged: true
        command: ['sh', '-c', 'chgrp -R 1001 /usr/share/nginx/html;chmod -R g+rwx /usr/share/nginx/html']
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-data
          subPath: data1
      containers:
      - name: nginx
        image: docker.io/nginxinc/nginx-unprivileged:alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-data
          mountPath: /usr/share/nginx/html
          subPath: data1
        #securityContext:
        #  capabilities:
        #    drop:
        #    - KILL
        #    - MKNOD
        #    - SETGID
        #    - SETUID
        #  runAsUser: 1001
        #  runAsGroup: 1001
        #securityContext:
        #  privileged: true
        resources:
          requests:
            memory: 128M
            cpu: 125m
          limits:
            memory: 1024M
            cpu: 1000m
---
apiVersion: v1
kind: Service
metadata:
 name: nginx-svc
 labels:
   app: nginx
spec:
 type: NodePort
 ports:
 - port: 8080
   nodePort: 30080
 selector:
   app: nginx

